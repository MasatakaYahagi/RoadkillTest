@model SettingsViewModel

@{
	ViewBag.Title = SiteStrings.SiteSettings_Configuration_Title;
}
@Url.ScriptLinkForValidationLocalization()

<script type="text/javascript">
	$(document).ready(function ()
	{
		$("input[rel=popover][type!=checkbox]").popover({ container: "body", placement: "right", trigger: "hover", html: true });
		$("input[type=checkbox][rel=popover],textarea[rel=popover],select[rel=popover]").popover({ container: "body", placement: "right", trigger: "hover", html: true });

		toggleUserSettings();

		//$("form").validationEngine();
		$("#UseWindowsAuth").click(function ()
		{
			toggleUserSettings();
		});


		$("#testdbconnection").click(function ()
		{
			$("#db-loading").removeClass("hidden");
			$("#db-loading").show();
			$.get("@(Url.Action("TestDatabaseConnection","Install"))",
					{
						"connectionString": $("#ConnectionString").val(),
						"databaseType": $("#DataStoreTypeName").val()
					},
					function (data)
					{
						$("#db-loading").hide();
						if (data.Success)
						{
							toastr.success("Database connection was successful.");
						}
						else
						{
							toastr.error("Database connection failed: <br/>" + data.ErrorMessage);
						}
					});
		});
		$("#testattachments").click(function ()
		{
			$.get("@(Url.Action("TestAttachments","Install"))",
				{ "folder": $("#AttachmentsFolder").val() },
					function (data)
					{
						if (data.Success)
						{
							toastr.success("Success! The directory exists and can be written to.");
						}
						else
						{
							toastr.error("Attachments directory failed: <br/>" + data.ErrorMessage);
						}
					});
		});
	});

	function toggleUserSettings()
	{
		if ($("#UseWindowsAuth").is(":checked"))
		{
			$("#aspnetuser-settings").hide();
			$("#ldapsettings").show();
			$("#ldapsettings").removeClass("hidden");
		}
		else
		{
			$("#ldapsettings").hide();
			$("#aspnetuser-settings").show();
			$("#aspnetuser-settings").removeClass("hidden");
		}
	}
</script>
@Html.Partial("SettingsMenu", ViewData)

@Html.ValidationSummary("Unable to save the settings:", new { @class = "alert alert-block alert-error fade in", data_dismiss = "alert" })

@using (Html.BeginForm())
{
	<div id="configuration-container">
		<!-- Site-->
		<fieldset>
			<legend>@SiteStrings.SiteSettings_Configuration_Site</legend>

			<div class="form-group col-lg-5 row">
				<label for="SiteName">@SiteStrings.SiteSettings_Configuration_SiteName</label>
				@Html.SettingsTextBoxFor(s => s.SiteName, SiteStrings.SiteSettings_Configuration_SiteName_Help)

				<label for="SiteUrl">@SiteStrings.SiteSettings_Configuration_SiteUrl</label>
				@Html.SettingsLongTextBoxFor(s => s.SiteUrl, SiteStrings.SiteSettings_Configuration_SiteUrl_Help)
			</div>
		</fieldset>

		<!-- Database -->
		<fieldset>
			<legend>@SiteStrings.SiteSettings_Configuration_Database</legend>

			<div class="form-group col-lg-7 row">
				<label for="DatabaseType">@SiteStrings.SiteSettings_Configuration_DatabaseType</label>
				@Html.SettingsDropDownListFor(x => x.DataStoreTypeName, Html.DatabaseTypesAvailable(Model), SiteStrings.SiteSettings_Configuration_DatabaseType_Help)

				<label for="ConnectionString">@SiteStrings.SiteSettings_Configuration_DatabaseConnectionString</label>
				@Html.SettingsLongTextBoxFor(s => s.ConnectionString, SiteStrings.SiteSettings_Configuration_DatabaseConnectionString_Help)

				<div class="pull-left">
					<button id="testdbconnection" class="btn btn-primary test-button" type="button">
						@InstallStrings.Shared_TestButton
						<span id="db-loading" class="hidden"><img src="@(Url.Content("~/Assets/Images/button-loading.gif"))" border="0" alt="loading" /></span>
					</button>
				</div>
			</div>
		</fieldset>

		<!-- Security -->
		<fieldset>
			<legend>@SiteStrings.SiteSettings_Configuration_Security</legend>

			<div class="form-group col-lg-5 row">
				<label for="IsPublicSite" class="checkbox">
					@SiteStrings.SiteSettings_Configuration_IsPublicSite
					@Html.SettingsCheckBoxFor(s => s.IsPublicSite, SiteStrings.SiteSettings_Configuration_IsPublicSite_Help)
				</label>

				<label for="UseWindowsAuth" class="checkbox">
					@SiteStrings.SiteSettings_Configuration_UseWindowsAuth
					@Html.SettingsCheckBoxFor(s => s.UseWindowsAuth, LocalizationTokens.ReplaceHtmlTokens(SiteStrings.SiteSettings_Configuration_UseWindowsAuth_Help))
				</label>

				<!-- Forms Authentication -->
				<div id="aspnetuser-settings" class="hidden">
					<label for="AllowUserSignup" class="checkbox">
						@SiteStrings.SiteSettings_Configuration_AllowUserSignups
						@Html.SettingsCheckBoxFor(s => s.AllowUserSignup, SiteStrings.SiteSettings_Configuration_AllowUserSignups_Help)
					</label>

					<label for="IsRecaptchaEnabled" class="checkbox">
						@SiteStrings.SiteSettings_Configuration_EnableRecaptcha
						@Html.SettingsCheckBoxFor(s => s.IsRecaptchaEnabled, SiteStrings.SiteSettings_Configuration_EnableRecaptcha_Help)
					</label>

					<label for="RecaptchaPrivateKey">@SiteStrings.SiteSettings_Configuration_RecaptchaPrivateKey</label>
					@Html.SettingsLongTextBoxFor(s => s.RecaptchaPrivateKey, SiteStrings.SiteSettings_Configuration_RecaptchaPrivateKey_Help)

					<label for="RecaptchaPrivateKey">@SiteStrings.SiteSettings_Configuration_RecaptchaPublicKey</label>
					@Html.SettingsLongTextBoxFor(s => s.RecaptchaPublicKey, SiteStrings.SiteSettings_Configuration_RecaptchaPublicKey_Help)
				</div>

				<!-- Active Directory -->
				<div id="ldapsettings" class="hidden">
					<label for="LdapConnectionString">@SiteStrings.SiteSettings_Configuration_AD_Connection</label>
					@Html.SettingsTextBoxFor(s => s.LdapConnectionString, SiteStrings.SiteSettings_Configuration_AD_Connection_Help)

					<label for="LdapUsername">@SiteStrings.SiteSettings_Configuration_AD_Username</label>
					@Html.SettingsTextBoxFor(s => s.LdapUsername, SiteStrings.SiteSettings_Configuration_AD_Username_Help)

					<label for="LdapPassword">@SiteStrings.SiteSettings_Configuration_AD_Password</label>
					@Html.SettingsTextBoxFor(s => s.LdapPassword, SiteStrings.SiteSettings_Configuration_AD_Password_Help)
				</div>

				<label for="EditorRoleName">@SiteStrings.SiteSettings_Configuration_EditorRole</label>
				@Html.SettingsTextBoxFor(s => s.EditorRoleName, SiteStrings.SiteSettings_Configuration_EditorRole_Help)

				<label for="AdminRoleName">@SiteStrings.SiteSettings_Configuration_AdminRole</label>
				@Html.SettingsTextBoxFor(s => s.AdminRoleName, LocalizationTokens.ReplaceHtmlTokens(SiteStrings.SiteSettings_Configuration_AdminRole_Help))
			</div>
		</fieldset>

		<!-- General -->
		<fieldset>
			<legend>@SiteStrings.SiteSettings_Configuration_General</legend>

			<div class="form-group col-lg-7 row">
				<label for="IgnoreSearchIndexErrors" class="checkbox">
					@SiteStrings.SiteSettings_Configuration_IgnoreSearchIndexErrors
					@Html.SettingsCheckBoxFor(s => s.IgnoreSearchIndexErrors, SiteStrings.SiteSettings_Configuration_IgnoreSearchIndexErrors_Help)
				</label>

				<label for="MarkupType">@SiteStrings.SiteSettings_Configuration_MarkupType</label>
				@Html.SettingsDropDownListFor(x => x.MarkupType, new SelectList(Model.MarkupTypesAvailable, Model.MarkupType), SiteStrings.SiteSettings_Configuration_MarkupType_Help)

				<label for="Theme">@SiteStrings.SiteSettings_Configuration_Theme</label>
				@Html.SettingsDropDownListFor(x => x.Theme, new SelectList(Model.ThemesAvailable, Model.Theme), SiteStrings.SiteSettings_Configuration_Theme_Help)

				<label for="HeadContent">@SiteStrings.SiteSettings_Configuration_HeadContent</label>
				@Html.SettingsTextAreaFor(s => s.HeadContent, LocalizationTokens.ReplaceHeadToken(SiteStrings.SiteSettings_Configuration_HeadContent_Help))

				<label for="MenuMarkup">@SiteStrings.SiteSettings_Configuration_NavMenu</label>
				@Html.SettingsTextAreaFor(s => s.MenuMarkup, LocalizationTokens.ReplaceMenuTokens(SiteStrings.SiteSettings_Configuration_NavMenu_Help))
			</div>
		</fieldset>

		<!-- File manager-->
		<fieldset>
			<legend>@SiteStrings.SiteSettings_Configuration_FileManager</legend>

			<div class="form-group col-lg-7 row">
				<label for="OverwriteExistingFiles" class="checkbox">
					@SiteStrings.SiteSettings_Configuration_FileManager_OverwriteExisting
					@Html.SettingsCheckBoxFor(s => s.OverwriteExistingFiles, SiteStrings.SiteSettings_Configuration_FileManager_OverwriteExisting_Help)
				</label>

				<label for="AllowedFileTypes">@SiteStrings.SiteSettings_Configuration_Extensions</label>
				@Html.SettingsTextBoxFor(s => s.AllowedFileTypes, SiteStrings.SiteSettings_Configuration_Extensions_Help, true)

				<label for="AttachmentsFolder">@SiteStrings.SiteSettings_Configuration_Attachments</label>
				@Html.SettingsTextBoxFor(s => s.AttachmentsFolder, SiteStrings.SiteSettings_Configuration_Attachments_Help, true)
			</div>
			<div class="form-group col-lg-7 row">
				<span class="label label-info">This directory maps to @Model.AttachmentsDirectoryPath</span>
			</div>
			<div class="form-group col-lg-7 row">
				<button id="testattachments" class="btn btn-primary test-button" type="button">
					@InstallStrings.Shared_TestButton
				</button>
			</div>
		</fieldset>

		<!-- Caching -->
		<fieldset>
			<legend>@SiteStrings.SiteSettings_Configuration_CachingTitle</legend>

			<div class="form-group col-lg-7 row">
				<label for="UseObjectCache" class="checkbox">
					@SiteStrings.SiteSettings_Configuration_ObjectCaching
					@Html.SettingsCheckBoxFor(s => s.UseObjectCache, SiteStrings.SiteSettings_Configuration_ObjectCaching_Help)
				</label>

				<label for="UseBrowserCache" class="checkbox">
					@SiteStrings.SiteSettings_Configuration_BrowserCaching
					@Html.SettingsCheckBoxFor(s => s.UseBrowserCache, SiteStrings.SiteSettings_Configuration_BrowserCaching_Help)
				</label>
			</div>
		</fieldset>

		<input type="submit" class="btn btn-primary" value="@SiteStrings.Button_Save" />
	</div>
}